{"uid":"54d072cd35ea00f5","name":"Book Loan with invalid loan type ID","fullName":"Loan/Book Loan#Book Loan with invalid loan type ID","historyId":"2eede35a-45f9-4f9b-b580-a502fb7abb8d","time":{"start":1710868837974,"stop":1710868840330,"duration":2356},"status":"failed","statusMessage":"Response status code is 404, Response contains a specific message","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Response status code is 404, Response contains a specific message","steps":[{"name":"Response status code is 404","time":{"start":1710868840328,"stop":1710868840328,"duration":0},"status":"failed","statusMessage":"expected response to have status code 404 but got 422","statusTrace":"Error: expected response to have status code 404 but got 422\n    at eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:5:23)\n    at e.test (evalmachine.<anonymous>:66:11560)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1818581)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8225)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response contains message","time":{"start":1710868840328,"stop":1710868840328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Response contains a specific message","time":{"start":1710868840329,"stop":1710868840329,"duration":0},"status":"failed","statusMessage":"expected 'The selected loan type id is invalid.' to deeply equal 'Loan type is invalid'","statusTrace":"Error: expected 'The selected loan type id is invalid.' to deeply equal 'Loan type is invalid'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:13:46)\n    at e.test (evalmachine.<anonymous>:66:11560)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1818546), <anonymous>:12:4)\n    at u.exec (evalmachine.<anonymous>:66:1818581)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8225)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"30456021c4a54572","name":"Request Headers","source":"30456021c4a54572.json","type":"application/json","size":1170},{"uid":"5c37d5cdab34cd60","name":"Request Body","source":"5c37d5cdab34cd60.txt","type":"text/plain","size":175},{"uid":"9693e9afdd7098c1","name":"Response Headers","source":"9693e9afdd7098c1.json","type":"application/json","size":333},{"uid":"6a084f67395c41ae","name":"Response Body","source":"6a084f67395c41ae.txt","type":"text/plain","size":119}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Loan"},{"name":"suite","value":"Book Loan"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"POST - https://salary.dev.onepipe.io/api/loans"},{"name":"Response Code","value":"422"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"54d072cd35ea00f5.json","parameterValues":["POST - https://salary.dev.onepipe.io/api/loans","422"]}